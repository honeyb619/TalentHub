@model List<BusinessEntities.ViewModel.VmTalentEntity>
@{
    ViewBag.Title = "Talents";
    WebGrid grid = new WebGrid(Model, ajaxUpdateContainerId: "grid", canPage: false);  
}
<style type="text/css">
    .slider {
        display: none;
    }

    .btn {
        min-width: 1em;
    }

    .btnwrapper {
        margin-left: 5%;
        margin-bottom: 2%;
        border: 1px solid #000;
        display: inline-block;
        position: relative;
    }

    input[type="checkbox"], input[type="radio"] {
        -moz-appearance: checkbox;
        -webkit-appearance: checkbox;
        -o-appearance: checkbox;
        -ms-appearance: checkbox;
        display: inline;
        float: none;
        margin-right: -2em;
        opacity: 100;
        width: 1em;
        z-index: -1;
    }

    td {
        padding-left: 1em!important;
        padding-right: 1em!important;
    }

    th {
        padding-left: 1em!important;
        padding-right: 1em!important;
        text-align: center;
    }

    .ui-dialog-titlebar-close {
        display: none;
    }

    .ui-dialog-titlebar {
        background-color: #ea6153!important;
        color: whitesmoke;
    }

    .table > thead > tr > td, .table > thead > tr > th {
        width: auto!important;
    }

    .dropdown.dropdown-lg .dropdown-menu {
        margin-top: -1px;
        padding: 6px 20px;
    }

    .input-group-btn .btn-group {
        display: flex !important;
    }

    .btn-group .btn {
        border-radius: 0;
        margin-left: -1px;
    }

        .btn-group .btn:last-child {
            border-top-right-radius: 4px;
            border-bottom-right-radius: 4px;
        }

    .btn-group .form-horizontal .btn[type="submit"] {
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px;
    }

    .form-horizontal .form-group {
        margin-left: 0;
        margin-right: 0;
    }

    .form-group .form-control:last-child {
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px;
    }
</style>
<script>
    var profiles=@Html.Raw(Json.Encode(@Model))
</script>

<div class="page-title">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <h3>Talent</h3>
            </div>
        </div>
    </div>
</div>
<div class="content">
    <div class="container">
        <!-- ui-dialog -->
        <div id="dialog" title="Assigned Jobs">
            <div id="AssignedJobs" style="text-align: center;">
            </div>
        </div>
    </div>
    <div class="row titlerow">

        <div class="col-sm-4 col-xs-12">
            <div class="input-group" id="adv-search">
                <input type="text" class="form-control" id="searchTxt" placeholder="Search" />
                <div class="input-group-btn">
                    <div class="btn-group" role="group">
                        <div class="dropdown dropdown-lg">
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><span class="caret"></span></button>

                            <div class="dropdown-menu dropdown-menu-right" style="background-color: whitesmoke; min-width: 15em; overflow:scroll; height:25em;" role="menu">
                                <form class="form-horizontal" role="form">
                                    <div class="form-group">
                                        <label for="contain">Region</label>
                                        <select class="form-control" id="regiontxt">
                                            <option value="">--select--</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="contain">Ethicity</label>
                                        <input class="form-control" id="ethicitytxt" type="text" />
                                    </div>
                                    <div class="form-group">
                                        <label for="filter">Text Filter by</label>
                                        <select class="form-control" id="searchcondition">
                                            <option value="" selected>--Select--</option>
                                            <option value="HairColor">Hair Color</option>
                                            <option value="EyeColor">Eye Color</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="contain">Search Text</label>
                                        <input class="form-control" id="conditiontxt" type="text" />
                                    </div>
                                    <div class="form-group">
                                        <label for="filter">Range Filter by</label>
                                        <select class="form-control" id="rangesearchcondition">
                                            <option value="" selected>--Select--</option>
                                            <option value="Age">Age</option>
                                            <option value="Waist">Waist</option>
                                            <option value="Hip">Hip</option>
                                            <option value="ChestBust">Chest/Bust</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="contain">Min</label>
                                        <input class="form-control" id="minconditiontxt" type="number" min="0"  />
                                    </div>
                                    <div class="form-group">
                                        <label for="contain">Max</label>
                                        <input class="form-control" id="maxconditiontxt" type="number" min="0" />
                                    </div>
                                    <button type="button" class="btn btn-primary" onclick="return advancedSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                                </form>
                            </div>
                        </div>
                        <button type="button" class="btn btn-primary" onclick="return SearchTalent()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                        <button type="button" class="btn btn-primary" onclick="return ResetTalent()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                    </div>
                </div>
            </div>           
        </div>
        <div class="col-sm-8 col-xs-12" style="padding: 7px 0;">
            <div class="row">
                <div class="col-sm-3 col-xs-12">
                </div>
                <div class="col-sm-6 col-xs-12">
                    <input type="button" class="form-control btn btn-primary" style="float: right; margin-bottom: 2%; margin-left: 2em;" value="Send Profiles" onclick="sendTalent();" />
                    <input type="button" class="form-control btn btn-success" style="float: right; margin-bottom: 2%; margin-left: 2em;" value="Add Talent" onclick="AddTalent();" />
                </div>
                <div class="col-sm-3 col-xs-12">
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-xs-12">
        <div class="col-sm-12 col-xs-12">
            <div class="col-xs-2" style="margin-bottom: 1em; background: #ea6153!important; color: whitesmoke;"><strong>Talent Count :  @grid.TotalRowCount </strong></div>
        </div>
        <div id="custom-table" class="table">
            @{  
                
                @grid.GetHtml(
         tableStyle: "table",
         columns: new[] {  
         grid.Column(format: (item) =>{
             var talentModel = Model.Where(x => x.TalentId == item.TalentId).FirstOrDefault();
             var media = talentModel.vmMedias;
             if (media.Count() >0)
    {
        return @Html.Raw("<img src='" + media.FirstOrDefault().MediaPath + "' alt='Image' style='height:80px;width:80px' />");
    }
    else
    {
           return @Html.Raw("<img src='/Images/blank-profile-picture.png' alt='Image' style='height:80px;width:80px' />");
    }
        }),  
         grid.Column("Name",format:(item)=> string.Format("{0} {1}",item.FirstName,item.LastName)),  
         grid.Column("EmailId",header: "Email"),  
         grid.Column("Gender", header: "Gender"),  
         grid.Column("Age",header: "Age"),
         grid.Column("Mobile", header: "Mobile"),
          grid.Column("RegionName", header: "Region"),
          grid.Column("TalentId", header: "Action", canSort:false,  
           
         format: @<text>
                @Html.Raw("<i class='fa fa-eye' aria-hidden='true' onclick='ViewTalent(" + item.TalentId + ")' ></i>")
                &nbsp;
            @Html.Raw("<i class='fa fa-trash' aria-hidden='true' onclick='DeleteTalent(" + item.TalentId + ")' ></i>")
                &nbsp;
            @Html.Raw("<i class='fa fa-pencil' aria-hidden='true' onclick='EditTalent(" + item.TalentId + ")' ></i>")
                &nbsp;
                  @Html.Raw("<i class='fa fa-briefcase' aria-hidden='true' onclick='OpenJobs(" + item.TalentId + ")' ></i>")
                &nbsp;
            @Html.Raw("<input type='checkbox' class='profileSelect' aria-hidden='true' data-label='" + item.TalentId + "' />")

                </text>  
        )  
         //, canSort:false,  
           
        /* format: @<text>
            @Html.Raw("<i class='fa fa-pencil' aria-hidden='true' onclick='EditCategories(" + item.SubCategoryId + ")' ></i>")
            @Html.Raw("<i class='fa fa-trash' aria-hidden='true' onclick='DeleteTalent(" + item.TalentId + ")' ></i>")
            </text>  
        )  */
     })  
            }
        </div>
    </div>
</div>

<script>

    $(document).ready(function(){
        $.get('/Admin/GetRegions',
                function (data) {
                    Enumerable.From(data).ForEach(function(opt){          
                        $('#regiontxt').append($('<option>',
         {
             value: opt.RegionName,
             text : opt.RegionName 
         }));
                    });

                });
    });

    function AddTalent() {
        window.location = "/Home/RegisterTalent";
    }

    function ViewTalent(TalentId) {
        window.location = "/Home/Profile?ProfileId=" + TalentId;
    }

    function EditTalent(TalentId) {
        window.location = "/Admin/EditTalent?TalentId=" + TalentId;
    }

    function DeleteTalent(TalentId) {
        if (confirm("Are You Sure Delete Selected Talent?")) {
            $.get('/Admin/DeleteTalent?TalentId=' + TalentId,
                function (data) {
                    if (data == true)
                        window.location = "/Admin/Talents";
                    else
                        alert("Not deleted something Wrong");
                });
        }
    }
    function SearchTalent() {
        var searchKey = $("#searchTxt").val();
        window.location = "/Admin/Talents?Search=" + searchKey;
    }

    function advancedSearch(){
        var advancedsearchparam="/Admin/Talents?AdvancedSearch=true&";
        if($("#regiontxt").val()){
            advancedsearchparam =advancedsearchparam+"Region="+$("#regiontxt").val()+"&";
        }
        if($("#ethicitytxt").val()){
            advancedsearchparam =advancedsearchparam+"Ethicity="+$("#ethicitytxt").val()+"&";
        }
        if($("#searchcondition").val()&& $("#conditiontxt").val()){
            advancedsearchparam =advancedsearchparam+$("#searchcondition").val()+"="+$("#conditiontxt").val();
        }
        if($("#rangesearchcondition").val()&& $("#minconditiontxt").val() && $("#maxconditiontxt").val()){
            advancedsearchparam =advancedsearchparam+$("#rangesearchcondition").val()+"="+$("#minconditiontxt").val()+'-'+$("#maxconditiontxt").val();
        }

        if(advancedsearchparam !="/Admin/Talents?AdvancedSearch=true&")
            window.location = advancedsearchparam;
    }

    function ResetTalent() {
        window.location = "/Admin/Talents";
    }

    function sendTalent(){
        var sendProfiles={};
        sendProfiles.candidateList=[];
        $('.profileSelect:checkbox:checked').each(function(){
            var profileId=$(this).attr('data-label');
            var profile=Enumerable.From(profiles).Where(function(talent){
                return talent.TalentId==profileId;
            }).ToArray();
            var candidate={};
            candidate.RegionName=profile[0].RegionName;
            candidate.CandidateName=profile[0].FirstName+" "+profile[0].LastName;
            candidate.ProfileId=profileId;
            var media=Enumerable.From(profile[0].vmMedias).Where(function(talent){
                return talent.MediaType=="Image";
            }).ToArray();
            if(media.length>0){
                var MediaPath=media[0].MediaPath.split('/');
                candidate.profilePicPath=MediaPath.pop();
            }
            else
                candidate.profilePicPath="";
            sendProfiles.candidateList.push(candidate);
        });
        if (sendProfiles.candidateList.length==0){
            alert("Please select profiles..")
            return;
        }
        $.ajax({
            url: '/Email/ProductionEmailFormat',
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(sendProfiles),
            processData: false,
            cache: false,
            success: function (data) {
                EnquiryObj={};
                EnquiryObj["Message"] = data;
                sendEnquiry(EnquiryObj).then(function () {
                    window.location = "../Home/MessagePage?messageKey=EnquirySent";
                }, function (error) {
                    alert('Please try after some time.');
                });
            },
            error: function (xhr) {
                alert('Please try after some time.');
            }
        });
    }

    function OpenJobs(TalentId){
        var url = '/Admin/GetJobsbyTalentId?TalentId=' + TalentId;
        $.ajax({
            url: url,
            type: "GET",
            cache: false,
            datatype: "json",
            success: function (data) {
                var lisofJobs='<table class="table"><tr style="background-color: darkgrey;"><th>Job Name</th><th>Job Status</th></tr>'
                if(data.length>0){
                    for(var x in data){
                        lisofJobs=lisofJobs+'<tr><td>'+data[x].JobName+'</td><td>'+data[x].JobStatus+'</td></tr>'
                    }
                    lisofJobs=lisofJobs+'</table>'
                    $("#AssignedJobs").html(lisofJobs);
                }
                else{
                    lisofJobs='<p>No active jobs tagged to selected talent.</p>'
                    $("#AssignedJobs").html(lisofJobs);
                }
                $("#dialog").dialog("open");
            },
            error: function (xhr) {
                alert('Please try after some time.');
            }
        });
        
    }

    function sendEnquiry(messageObj) {
        return $.ajax({
            url: '/Admin/SendEmail',
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(messageObj),
            processData: false,
            cache: false,
            success: function (data) {

            },
            error: function (xhr) {
                alert('Please try after some time.');
            }
        });

    }

    $(document).ready(function () {

        $("#dialog").dialog({
            autoOpen: false,
            width: 700,
            buttons: [
            {
                text: "Close",
                click: function () {
                    $(this).dialog("close");
                }
            }
            ]
        });
    });

</script>
